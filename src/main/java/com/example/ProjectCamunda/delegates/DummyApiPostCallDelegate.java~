package com.example.ProjectCamunda.delegates;

import lombok.extern.slf4j.Slf4j;
import org.camunda.bpm.engine.delegate.DelegateExecution;
import org.camunda.bpm.engine.delegate.JavaDelegate;
import org.springframework.http.HttpEntity;
import org.springframework.http.HttpHeaders;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Component;
import org.springframework.web.client.RestTemplate;

@Slf4j
@Component
public class DummyApiPostCallDelegate implements JavaDelegate {

    @Override
    public void execute(DelegateExecution execution) throws Exception {
        log.info("Executing Dummy API Post Call");

        String shipmentType = (String) execution.getVariable("shipmentType");
        Long itemId = (Long) execution.getVariable("itemId");
        Integer noOfItems = (Integer) execution.getVariable("noOfItems");

        log.info("Item ID: {}", itemId);
        log.info("Number of Items: {}", noOfItems);
        log.info("Shipment Type: {}", shipmentType);

        // Create request body
        String requestBody = String.format(
                "{\"itemId\": %d, \"shipmentType\": \"%s\", \"noOfItems\": %d}",
                itemId, shipmentType, noOfItems
        );

        // Create headers
        HttpHeaders headers = new HttpHeaders();
        headers.setContentType(MediaType.APPLICATION_JSON);

        // Create entity with headers and body
        HttpEntity<String> entity = new HttpEntity<>(requestBody, headers);

        // API endpoint
        String apiUrl = "https://dummyapi.com/api/v1/postCall";

        try {
            // Make the POST call
            RestTemplate restTemplate = new RestTemplate();
            ResponseEntity<String> response = restTemplate.postForEntity(apiUrl, entity, String.class);

            // Log and store the response
            log.info("API Response: {}", response.getBody());
            execution.setVariable("apiResponse", response.getBody());
            execution.setVariable("apiStatus", response.getStatusCodeValue());
        } catch (Exception e) {
            // Handle errors
            log.error("Error during API call: {}", e.getMessage());
            execution.setVariable("apiStatus", "FAILED");
            execution.setVariable("apiErrorMessage", e.getMessage());
        }
    }
}
